@model FlashSale.Areas.Admin.Model.SanPhamModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="main-content-inner">
    <div class="row">
        <div class="col-12">
            <div class="row">
                <div class="col-12 mt-5">
                    <div class="card">
                        <div class="card-body">
                            <h3 class="pl-3">Sửa sản phẩm</h3>
                            <br>
                            <form enctype="multipart/form-data" method="post">
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(model => model.db.ID)

                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                    <div>
                                        <div class="col-md-6 col-12">
                                            @Html.Partial("CommonInput/_FormCheckBoxInput", Tuple.Create("db.ConHang", Model.db.ConHang, "Còn hàng", false))
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        <div class="col-md-6 col-12">
                                            @Html.Partial("CommonSelect/_FormDropdown", Tuple.Create("Nhóm sản phẩm", "db.idNhomSanPham", new Data.mapSanPham().getListUse().Select(x => new SelectListItem { Value = x.id.ToString(), Text = x.name }), Model.db.idNhomSanPham.ToString(), false, "nhomSanPham", ""))
                                        </div>

                                        <div class="col-md-6 col-12">
                                            @Html.Partial("CommonSelect/_FormDropdown", Tuple.Create("Loại sản phẩm", "db.idLoaiSanPham", new Data.mapTypeProduct().getListUse().Select(x => new SelectListItem { Value = x.id.ToString(), Text = x.name }), Model.db.idLoaiSanPham.ToString(), false, "loaiSanPham", ""))
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        <div class="col-12">
                                            @Html.Partial("CommonInput/_FormTextInput", Tuple.Create("Tên sản phẩm", "db.TenSanPham", Model.db.TenSanPham, false))
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        <div class="col-md-6 col-12">
                                            @Html.Partial("CommonInput/_FormNumberInputField", Tuple.Create("Giá niêm yết", "db.GiaNiemYet", Model.GiaNiemYetView, "formatNumberCommon(this)", false))
                                        </div>
                                        <div class="col-md-6 col-12">
                                            @Html.Partial("CommonInput/_FormNumberInputField", Tuple.Create("Giá sale", "db.GiaSale", Model.GiaSaleView, "formatNumberCommon(this)", false))
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        <div class="col-md-6 col-12">
                                            @Html.Partial("CommonInput/_FormDateTimeInput", Tuple.Create("Giờ bắt đầu", "db.GioBatDau", Model.db.GioBatDau, false))
                                        </div>
                                        <div class="col-md-6 col-12">
                                            @Html.Partial("CommonInput/_FormDateTimeInput", Tuple.Create("Giờ kết thúc", "db.GioKetThuc", Model.db.GioKetThuc, false))
                                        </div>
                                    </div>

                                    <div class="d-flex justify-content-end">
                                        <div class="form-group">
                                            <div class="col-md-offset-2 col-md-12">
                                                <button type="button" class="btn btn-default mr-1">
                                                    <a href="~/Admin/SanPham/Index" style="color:black">Đóng</a>
                                                </button>
                                                <input type="submit" value="Sửa" class="btn btn-primary" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        function formatNumberCommon(input) {
            let value = input.value.replace(/,/g, ''); // Remove existing commas
            if (value) {
                input.value = parseFloat(value).toLocaleString('en-US'); // Format number with commas
            } else {
                input.value = '';
            }
        }

         $(document).ready(function () {
            $('#nhomSanPham').change(function () {
                var groupId = $(this).val();
                $.ajax({
                    url: '@Url.Action("getListUseByGroup", "TypeProduct")',
                    type: 'GET',
                    data: { groupId: groupId },
                    success: function (data) {
                        var loaiSanPhamDropdown = $('#loaiSanPham');
                        loaiSanPhamDropdown.empty(); // Clear existing options
                        $.each(data, function (i, item) {
                            loaiSanPhamDropdown.append($('<option>', {
                                value: item.id,
                                text: item.name
                            }));
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error("Error fetching product types:", status, error);
                    }
                });
            });
        });
    </script>
}

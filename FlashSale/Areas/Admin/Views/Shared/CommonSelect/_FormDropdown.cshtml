@{
    var tupleModel = Model as Tuple<string, string, IEnumerable<SelectListItem>, string, bool, string, string>;

    if (tupleModel == null)
    {
        <div class="alert alert-danger">Model không phải là kiểu Tuple mong đợi.</div>
    }
    else
    {
        var label = tupleModel.Item1;
        var validationMessageName = tupleModel.Item2;
        var selectList = tupleModel.Item3 ?? Enumerable.Empty<SelectListItem>();
        var selectedValue = tupleModel.Item4?.Trim();  // Trimming spaces just in case
        var isDisabled = tupleModel.Item5;
        var idselectedValue = tupleModel.Item6;
        var onchangeFunction = tupleModel.Item7;

        <label class="control-label col-md-12">
            @label
            @Html.ValidationMessage(validationMessageName, "", new { @class = "text-danger" })
        </label>
        <div class="col-12">
            <select name="@validationMessageName" id="@idselectedValue" class="form-control" @(isDisabled ? "readonly" : "") onchange="@onchangeFunction" style="height:45px">
                <option value="">-- Chọn --</option>
                @foreach (var item in selectList)
                {
                    <option value="@item.Value" @(item.Value == selectedValue ? "selected" : "")>
                        @item.Text
                    </option>
                }
            </select>
        </div>
    }
}
